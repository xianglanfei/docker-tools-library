# Name of your workflow, shown in the GitHub "Actions" tab
name: Build and Push Docker Tools

# Trigger: This workflow runs on any 'push' to the 'main' branch
on:
  push:
    branches: [ "main" ]

# Jobs: A workflow is made up of one or more jobs that run in parallel
jobs:
  # Define a job named 'build-and-push'
  build-and-push:
    # The type of machine to run the job on. 'ubuntu-latest' is standard.
    runs-on: ubuntu-latest

    # Define a 'strategy' to run this job multiple times, once for each tool
    strategy:
      matrix:
        # Create a variable 'tool' with a list of our tool directories
        tool: [jq, node-builder, curl]

    # Steps: The sequence of tasks to perform for each tool in the matrix
    steps:
      # Step 1: Check out your repository code onto the runner machine
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub using the secrets we created
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build and push the Docker image
      - name: Build and push Docker image for ${{ matrix.tool }}
        uses: docker/build-push-action@v5
        with:
          # The context is the subdirectory for the specific tool
          context: ./dockerfiles/${{ matrix.tool }}
          # Tells the action to push the image after building
          push: true
          # The name and tag for the image on Docker Hub
          # Format: your-username/tool-name:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.tool }}:latest